version: '3'
services:
  zookeeper:
    image: wurstmeister/zookeeper
    container_name: zookeeper
    expose:
      - "2181"
    networks:
      - kafka-network
    
  kafka:
    image: wurstmeister/kafka
    container_name: kafka
    expose:
      - "9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - zookeeper
    deploy:
      resources:
        limits:
          memory: 512M
    networks:
      - kafka-network
      - cloud-network

  config-service:
    image: oognuyh/msa-chat-config-service
    container_name: config-service
    networks:
      - cloud-network
      
  discovery-service:
    image: oognuyh/msa-chat-discovery-service
    container_name: discovery-service
    depends_on:
      - config-service
    ports:
      - "8081:8081"
    volumes: 
      - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh config-service:8083 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - cloud-network
      
  gateway-service:
    image: oognuyh/msa-chat-gateway-service
    container_name: gateway-service
    depends_on:
      - discovery-service
    restart: on-failure
    ports:
      - "8082:8082"
    volumes: 
      - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh discovery-service:8081 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - cloud-network
      
  auth-service:
    image: jboss/keycloak:14.0.0
    container_name: auth-service
    depends_on:
      - auth-service-db
    ports:
      - "8080:8080"
    environment:
      DB_VENDOR: postgres
      DB_ADDR: auth-service-db
      DB_PORT: 5432
      DB_DATABASE: keycloak
      DB_SCHEMA: public
      DB_USER: keycloak
      DB_PASSWORD: keycloak
      KEYCLOAK_USER: admin
      KEYCLOAK_PASSWORD: admin
      KEYCLOAK_IMPORT: /tmp/keycloak/chat-realm.json 
    volumes:
      - ./auth-service/realm:/tmp/keycloak
    networks:
      - auth-network
      - cloud-network
      
  auth-service-db:
    image: postgres
    container_name: auth-service-db
    expose:
      - 5432
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: keycloak
    volumes:
      - ./auth-service/data/db:/var/lib/postgresql/data
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - auth-network
      
  user-service:
    image: oognuyh/msa-chat-user-service
    container_name: user-service
    depends_on:
      - gateway-service
      - kafka
    volumes: 
    - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh gateway-service:8082 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - cloud-network
      
  image-service:
    image: oognuyh/msa-chat-image-service
    container_name: image-service
    depends_on:
      - minio
    volumes: 
    - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh gateway-service:8082 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - image-network
      - cloud-network
      
  minio:
    image: minio/minio
    container_name: minio
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: miniopwd
    ports:
      - "9001:9001"
    expose:
      - 9000
    command: server /data --console-address ":9001"
    volumes:
      - ./image-service/minio/data:/data
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - image-network
    
  friend-service:
    image: oognuyh/msa-chat-friend-service
    container_name: friend-service
    depends_on:
      - user-service
    volumes: 
    - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh gateway-service:8082 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - cloud-network
      - friend-network
      
  friend-service-db:
    image: mysql:latest
    container_name: friend-service-db
    volumes:
      - ./friend-service/data/db:/var/lib/mysql
    expose:
      - 3306
    environment:
      MYSQL_DATABASE: friend
      MYSQL_USER: friend
      MYSQL_PASSWORD: friend
      MYSQL_ROOT_PASSWORD: root
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - friend-network
  
  chat-service:
    image: oognuyh/msa-chat-chat-service
    container_name: chat-service
    depends_on:
      - user-service
      - chat-service-db
    volumes: 
    - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh gateway-service:8082 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - cloud-network
      - chat-network
      
  chat-service-db:
    image: mongo:latest
    container_name: chat-service-db
    expose:
      - 27017
    volumes:
      - ./chat-service/data/db:/data/db
    deploy:
      resources:
        limits:
          memory: 256M
    networks:
      - chat-network
      
  notification-service:
    image: oognuyh/msa-chat-notification-service
    container_name: notification-service
    depends_on:
      - kafka
      - gateway-service
    volumes: 
    - ./scripts/wait-for-it.sh:/wait.sh
    entrypoint: sh -c "/wait.sh gateway-service:8082 -t 120 && java -Xmx200m -jar service.jar"
    networks:
      - cloud-network
      
  frontend-web:
    image: oognuyh/msa-chat-frontend-web:latest
    container_name: frontend-web
    restart: on-failure
    ports:
      - "3000:3000"
    depends_on:
      - auth-service
    networks:
      - cloud-network
      
networks:
  cloud-network:
  auth-network:
  chat-network:
  friend-network:
  image-network:
  kafka-network:
